/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.mycompany.laboratoriodeelectronica;

import java.sql.CallableStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.Time;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author danie
 */
public class Asistencia extends javax.swing.JInternalFrame {    
    Integer ClaveAlumno=0;
    Integer ClaveMateria=0;
    Integer rpeEmpleado=0;
    
    private String userName;
    private String password;
    Cconexion conexion = new Cconexion(userName, password);
    /**
     * Creates new form Asistencia
     */
    /*public Asistencia() {
        initComponents();
        LlenaClavesAsistencia();
        LlenaClavesMateria();
        LlenaRPEAsistencia();
        Mostrar(datosAsistencia);
        jLabel4.setVisible(false);
        jLabel5.setVisible(false);
        jLabel6.setVisible(false);
        jTextField3.setVisible(false);
        jTextField2.setVisible(false);
        jTextField1.setVisible(false);
    }*/
    public Asistencia(String user, String passwrd) {
        initComponents();
        userName = user;
        password = passwrd;
        LlenaClavesAsistencia();
        LlenaClavesMateria();
        LlenaRPEAsistencia();
        Mostrar(datosAsistencia);
        jLabel4.setVisible(false);
        jLabel5.setVisible(false);
        jLabel6.setVisible(false);
        jTextField3.setVisible(false);
        jTextField2.setVisible(false);
        jTextField1.setVisible(false);                

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        alumnoAsistencia = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        empleadoAsistencia = new javax.swing.JComboBox<>();
        materiaAsistencia = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        datosAsistencia = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Asistencia");

        jLabel1.setText("Clave Alumno");

        jLabel2.setText("Empleado");

        jLabel3.setText("Materia");

        jLabel4.setText("Fecha");

        jLabel5.setText("Hora Entrada");

        jLabel6.setText("Hora Salida");

        jButton1.setText("Agregar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Modificar");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Eliminar");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        datosAsistencia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        datosAsistencia.setRowHeight(40);
        datosAsistencia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                datosAsistenciaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(datosAsistencia);

        jButton4.setText("Registrar salida");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel6)
                        .addComponent(jLabel5)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(alumnoAsistencia, 0, 236, Short.MAX_VALUE)
                    .addComponent(materiaAsistencia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(empleadoAsistencia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField3)
                    .addComponent(jTextField1)
                    .addComponent(jTextField2))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(238, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(alumnoAsistencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(empleadoAsistencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(materiaAsistencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(116, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String[]clav = alumnoAsistencia.getSelectedItem().toString().split("-");
        String cMat= materiaAsistencia.getSelectedItem().toString();
        //claveTest.setText(cMatobtenAlumno(clav[0],clav[1]).toString);
        //obtenMateria(cMat);
       // claveTest.setText(ClaveMateria.toString());
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        insertarRegistroAsistencia();
        Mostrar(datosAsistencia);
    }//GEN-LAST:event_jButton1MouseClicked

    private void datosAsistenciaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_datosAsistenciaMouseClicked
        // TODO add your handling code here:
        seleccionarCar(datosAsistencia);
    }//GEN-LAST:event_datosAsistenciaMouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        EliminarAsistencia();
        Mostrar(datosAsistencia);
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
     
        ModificarMateria();
        Mostrar(datosAsistencia);
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
       
      RegistraSalida();
      Mostrar(datosAsistencia);
    }//GEN-LAST:event_jButton4MouseClicked

    public Integer obtenAlumno(String s1,String s2){
        Cconexion objetoConexion = new Cconexion(userName, password);
        Integer clav=0;
        String sql = "";
        //CONSULTA PARA MOSTRAR LA INFORMACION DE LA TABLA
        sql = "SELECT Clave_Unica FROM Persona.Alumno WHERE Nombre=" + "'" + s1 + "'" + " AND Generacion=" + Integer.parseInt(s2) + "";
        //es un arrgelo para la longitud de la tabla (columnas)
        String [] datos = new String[2];
        //para que se ejecute la consulta , y debemos de importar  import java.sql.Statement;
        Statement st; 
        
        try
        {
            st = objetoConexion.establecerConexion().createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next())
            {
                clav=rs.getInt(1);
            }
        
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error:"+ e.toString());
        }
        return clav;
    }
    
    public Integer obtenMateria(String s1){
        Cconexion objetoConexion = new Cconexion(userName, password);
        String sql = "";
        Integer clavMat=0;
        //CONSULTA PARA MOSTRAR LA INFORMACION DE LA TABLA
        sql = "SELECT clavemateria FROM Aula.Materia WHERE Nombre=" + "'" + s1 + "'";
        //es un arrgelo para la longitud de la tabla (columnas)
        String [] datos = new String[2];
        //para que se ejecute la consulta , y debemos de importar  import java.sql.Statement;
        Statement st; 
        
        try
        {
            st = objetoConexion.establecerConexion().createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next())
            {
                clavMat=rs.getInt(1);
            }
        
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error:"+ e.toString());
        }
        return clavMat;
    }
    
    
      private void insertarRegistroAsistencia(){
            Cconexion objetoConexion = new Cconexion(userName, password);
            String consulta = "Insert into Aula.Asistencia(clave_unica,rpe_empleado,clavemateria) VALUES(?,?,?);";        
            try
            {               
                String[] claveP = alumnoAsistencia.getSelectedItem().toString().split("-");
                String materiaP = materiaAsistencia.getSelectedItem().toString();
                String[] rpeP = empleadoAsistencia.getSelectedItem().toString().split("-");
              
                int lastId = obtenMateria(materiaP);
                int lastId1 = obtenAlumno(claveP[0],claveP[1]);
                CallableStatement cs = objetoConexion.establecerConexion().prepareCall(consulta);
                cs.setInt(1,lastId1);
                cs.setInt(2,Integer.parseInt(rpeP[0]));
                cs.setInt(3,lastId);
                cs.execute();                
            }
            catch (Exception e)
            {               
                //MessageBox.Show("ee" + ex.);
                JOptionPane.showMessageDialog(null,"Error" + e.toString());
            }
      }

         /*public void insertarAsistencia()
    {
        
        
        Cconexion objetoConexion = new Cconexion();
        //donde se guarda la consulta 
        String consulta = "Insert into Aula.Asistencia(Clave_Unica,Modelo,Descripcion,UbicacionEnLab,Marca,TipoEquipo) VALUES(?,?,?,?,?,?);";
        
        try
        {
            CallableStatement cs = objetoConexion.establecerConexion().prepareCall(consulta);
            cs.setString(1,nombreEquipo.getText());
            cs.setString(2,modeloEquipo.getText());
            cs.setString(3,descripcionEquipo.getText());
            cs.setString(4,ubicacionEquipo.getText());
            cs.setString(5,marcaEquipo.getText());
            cs.setString(6, (String) tipoEquipo.getSelectedItem());
            cs.execute();
            //JOptionPane.showMessageDialog(null,"Se inserto correctamente");
            
        }catch (Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error" + e.toString());
        }
    }*/
    
      private void LlenaClavesAsistencia(){        
            Cconexion objetoConexion = new Cconexion(userName, password);       
            //incorporar modelo a la tabla
            DefaultTableModel modelo = new DefaultTableModel();

            String sql = "";
            //CONSULTA PARA MOSTRAR LA INFORMACION DE LA TABLA
            sql = "SELECT Nombre,Generacion FROM Persona.Alumno;";

            //es un arrgelo para la longitud de la tabla (columnas)
            String [] datos = new String[2];
            //para que se ejecute la consulta , y debemos de importar  import java.sql.Statement;
            Statement st; 
        
            try
            {
                st = objetoConexion.establecerConexion().createStatement();
                ResultSet rs = st.executeQuery(sql);
                alumnoAsistencia.removeAllItems();
                alumnoAsistencia.addItem("Seleccione");
                while (rs.next())
                {
                    //guarda los valores duvueltos de la consulta
                    datos[0]= rs.getString(1);
                    datos[1]= rs.getString(2);
                    alumnoAsistencia.addItem(datos[0]+"-"+datos[1]);
                }
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,"Error:"+ e.toString());
            }
       }
      
       private void LlenaRPEAsistencia(){
        
            Cconexion objetoConexion = new Cconexion(userName, password);
            //incorporar modelo a la tabla
            DefaultTableModel modelo = new DefaultTableModel();

            String sql = "";

            //CONSULTA PARA MOSTRAR LA INFORMACION DE LA TABLA
            sql = "SELECT RPE_Empleado,Nombre FROM Persona.Empleado;";

            //es un arrgelo para la longitud de la tabla (columnas)
            String [] datos = new String[2];
            //para que se ejecute la consulta , y debemos de importar  import java.sql.Statement;
            Statement st; 
        
            try
            {
                st = objetoConexion.establecerConexion().createStatement();
                ResultSet rs = st.executeQuery(sql);
                empleadoAsistencia.removeAllItems();
                empleadoAsistencia.addItem("Seleccione");
                while (rs.next())
                {
                    //guarda los valores duvueltos de la consulta
                    datos[0]= rs.getString(1);
                    datos[1]= rs.getString(2);                     
                    empleadoAsistencia.addItem(datos[0]+"-"+datos[1]);
                }
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,"Error:"+ e.toString());
            }
        }
      
        private void LlenaClavesMateria(){
        
            Cconexion objetoConexion = new Cconexion(userName, password);
        
            //incorporar modelo a la tabla
            DefaultTableModel modelo = new DefaultTableModel();

            String sql = "";
            //CONSULTA PARA MOSTRAR LA INFORMACION DE LA TABLA
            sql = "SELECT Nombre FROM Aula.Materia;";

            //es un arrgelo para la longitud de la tabla (columnas)
            String [] datos = new String[1];
            //para que se ejecute la consulta , y debemos de importar  import java.sql.Statement;
            Statement st;             
            try
            {
                st = objetoConexion.establecerConexion().createStatement();
                ResultSet rs = st.executeQuery(sql);
                materiaAsistencia.removeAllItems();
                materiaAsistencia.addItem("Seleccione");
                while (rs.next())
                {
                    //guarda los valores duvueltos de la consulta
                    datos[0]= rs.getString(1);
                    materiaAsistencia.addItem(datos[0]);
                }        
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,"Error:"+ e.toString());
            }
        }
        
        public static String truncate(String value, int length) {
        // Ensure String length is longer than requested size.
        if (value.length() > length) {
            return value.substring(0, length);
        } else {
            return value;
        }
    }
          
    public void Mostrar(JTable paramCliente){
        Cconexion objetoConexion = new Cconexion(userName, password);
        
        //incorporar modelo a la tabla
        DefaultTableModel modelo = new DefaultTableModel();
        
        String sql = "";
        String sql1 = "";
        String sql2="";
        String sql3="";
        modelo.addColumn("Alumno");
        modelo.addColumn("Empleado");
        modelo.addColumn("Materia");
        modelo.addColumn("Alumno");
        modelo.addColumn("Empleado");
        modelo.addColumn("Materia");
        modelo.addColumn("Fecha");
        modelo.addColumn("Hora entrada");
        modelo.addColumn("Hora salida");
        
        //aqui solo se le da nombre a las columnas

        //CONSULTA PARA MOSTRAR LA INFORMACION DE LA TABLA
        sql = "Select * from Aula.Asistencia;";
        
        //es un arrgelo para la longitud de la tabla (columnas)
        String [] datos = new String[9];
        //para que se ejecute la consulta , y debemos de importar  import java.sql.Statement;
        Statement st;
        Statement st1; 
        Statement st2;
        Statement st3;
        //sql1 = "Select Nombre,Generacion from Persona.Alumno WHERE Nombre=" + "'" + s1 + "'";
        sql1="SELECT Nombre,Generacion FROM Persona.Alumno INNER JOIN Aula.Asistencia ON Aula.Asistencia.Clave_Unica=Persona.Alumno.Clave_Unica";
        sql2="SELECT Persona.Empleado.RPE_Empleado,Nombre FROM Persona.Empleado INNER JOIN Aula.Asistencia ON Aula.Asistencia.RPE_Empleado=Persona.Empleado.RPE_Empleado";
        sql3="SELECT Nombre FROM Aula.Materia INNER JOIN Aula.Asistencia ON Aula.Asistencia.clavemateria=Aula.Materia.ClaveMateria";
        try
        {
            st1 = objetoConexion.establecerConexion().createStatement();
            ResultSet ct = st1.executeQuery(sql1);
            st2=objetoConexion.establecerConexion().createStatement();
            ResultSet empleado = st2.executeQuery(sql2);
            st3=objetoConexion.establecerConexion().createStatement();
            ResultSet materia = st3.executeQuery(sql3);
          /* while(ct.next())
           {
               datos[6]= ct.getString(1)+"-"+ct.getString(2);
           }*/
            st = objetoConexion.establecerConexion().createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()&& ct.next() && empleado.next() && materia.next())
            {
                //guarda los valores duvueltos de la consulta
                datos[0]= rs.getString(1);
                datos[1]= rs.getString(2);
                datos[2]= rs.getString(3);
                //Valores de asistencia referentes a fehas
                datos[6]= rs.getString(4);
                datos[7]= truncate(rs.getString(5),8);
                datos[8]=rs.getString(6);
                //Concatenaciones
                datos[3]=ct.getString(1)+"-"+ct.getString(2);
                datos[4]=empleado.getString(1)+"-"+empleado.getString(2);
                datos[5]=materia.getString(1);
                //aqui se incorporan los datos
                modelo.addRow(datos);
            }
            
            paramCliente.setModel(modelo);
            paramCliente.getColumnModel().getColumn(0).setPreferredWidth(0);
            paramCliente.getColumnModel().getColumn(0).setMaxWidth(0);
            paramCliente.getColumnModel().getColumn(0).setMinWidth(0);
            paramCliente.getColumnModel().getColumn(0).setResizable(false);
            paramCliente.getColumnModel().getColumn(1).setPreferredWidth(0);
            paramCliente.getColumnModel().getColumn(1).setMaxWidth(0);
            paramCliente.getColumnModel().getColumn(1).setMinWidth(0);
            paramCliente.getColumnModel().getColumn(1).setResizable(false);
            paramCliente.getColumnModel().getColumn(2).setPreferredWidth(0);
            paramCliente.getColumnModel().getColumn(2).setMaxWidth(0);
            paramCliente.getColumnModel().getColumn(2).setMinWidth(0);
            paramCliente.getColumnModel().getColumn(2).setResizable(false);
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error:"+ e.toString());
        }
    }
          
    public void seleccionarCar(JTable Equipo){
        try
        {
              
            int fila = datosAsistencia.getSelectedRow();
            if(fila >= 0)
            {
                //(Cliente.getValueAt(fila, 0).toString());
                //NumInvEquipo =Integer.parseInt( Equipo.getValueAt(fila,0).toString());
                rpeEmpleado= Integer.parseInt(datosAsistencia.getValueAt(fila,1).toString());
                ClaveAlumno=Integer.parseInt(datosAsistencia.getValueAt(fila,0).toString());
                ClaveMateria = Integer.parseInt(datosAsistencia.getValueAt(fila,2).toString());
                
                empleadoAsistencia.setSelectedItem(datosAsistencia.getValueAt(fila,4).toString());
                materiaAsistencia.setSelectedItem(datosAsistencia.getValueAt(fila,5).toString());
                alumnoAsistencia.setSelectedItem(datosAsistencia.getValueAt(fila,3).toString());
                //ubicacionEquipo.setText(Equipo.getValueAt(fila,4).toString());
               // marcaEquipo.setText(Equipo.getValueAt(fila,5).toString());
                //tipoEquipo.setText(Equipo.getValueAt(fila,6).toString());
               // tipoEquipo.setSelectedItem(Equipo.getValueAt(fila,6).toString());
                //descripcionEquipo.setText(Equipo.getValueAt(fila,7).toString());
                //String spl[]=Equipo.getValueAt(fila,4).toString().split("-");
                
                
                //fechaSC.setDate(date1);
            }
            else 
            {
                JOptionPane.showMessageDialog(null,"Fila no seleccionada");
            }
        }catch (Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error" + e.toString());
        }
    }
    
    public void EliminarAsistencia(){
        
        Cconexion objetoConexion = new Cconexion(userName, password);
        
        String consulta ="DELETE FROM Aula.Asistencia WHERE Clave_Unica = ? AND RPE_EMPLEADO = ?;";
        String[] claveP = alumnoAsistencia.getSelectedItem().toString().split("-");
        String materiaP = materiaAsistencia.getSelectedItem().toString();
        String[] rpeP = empleadoAsistencia.getSelectedItem().toString().split("-");
                           
        int lastId1 = obtenAlumno(claveP[0],claveP[1]);                                      
        try
        {
            CallableStatement cs = objetoConexion.establecerConexion().prepareCall(consulta);
            cs.setInt(1,lastId1);
            cs.setInt(2,Integer.parseInt(rpeP[0]));
            cs.execute();
        }catch (Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error" + e.toString());
        }
    }
    
    public void ModificarMateria(){
        Cconexion objetoConexion = new Cconexion(userName, password);
        
        String consulta = "UPDATE Aula.Asistencia SET clave_unica = ? ,rpe_empleado = ?,clavemateria = ? WHERE Clave_Unica = ? AND clavemateria = ?;";
        //String consulta = "UPDATE persona.cliente SET nombre = '"+nombreMC+"', email ='"+emailMC+"', telefono = '"+telefonoMC+"', fechaNac = '"+fechaMC+"' WHERE id_cliente="+getIdcliente()+";";
        try
        {
            String[] claveP = alumnoAsistencia.getSelectedItem().toString().split("-");
            String materiaP = materiaAsistencia.getSelectedItem().toString();
            String[] rpeP = empleadoAsistencia.getSelectedItem().toString().split("-");
              
            int lastId = obtenMateria(materiaP);
            int lastId1 = obtenAlumno(claveP[0],claveP[1]);
            CallableStatement cs = objetoConexion.establecerConexion().prepareCall(consulta);
          
            cs.setInt(1,lastId1);
            cs.setInt(2,Integer.parseInt(rpeP[0]));
            cs.setInt(3,lastId);   
            cs.setInt(4,ClaveAlumno);
            cs.setInt(5,ClaveMateria);
            cs.execute();            
            
        }catch (Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error:" + e.toString());
        }
    }
 
    public void RegistraSalida(){
        Cconexion objetoConexion = new Cconexion(userName, password);
        String dateTime = DateTimeFormatter.ofPattern("HH:mm:ss").format(LocalDateTime.now());
           
        String consulta = "UPDATE Aula.Asistencia SET hr_salida = ? WHERE Clave_Unica = ? AND clavemateria = ?;";
        //String consulta = "UPDATE persona.cliente SET nombre = '"+nombreMC+"', email ='"+emailMC+"', telefono = '"+telefonoMC+"', fechaNac = '"+fechaMC+"' WHERE id_cliente="+getIdcliente()+";";
        
        try
        {
            String[] claveP = alumnoAsistencia.getSelectedItem().toString().split("-");
            String materiaP = materiaAsistencia.getSelectedItem().toString();
            String[] rpeP = empleadoAsistencia.getSelectedItem().toString().split("-");              
            int lastId = obtenMateria(materiaP);
            int lastId1 = obtenAlumno(claveP[0],claveP[1]);
            CallableStatement cs = objetoConexion.establecerConexion().prepareCall(consulta);
          
            cs.setTime(1,Time.valueOf(dateTime)); 
            cs.setInt(2,ClaveAlumno);
            cs.setInt(3,ClaveMateria);
            cs.execute();            
            
        }catch (Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error:" + e.toString());
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> alumnoAsistencia;
    private javax.swing.JTable datosAsistencia;
    private javax.swing.JComboBox<String> empleadoAsistencia;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JComboBox<String> materiaAsistencia;
    // End of variables declaration//GEN-END:variables
}
