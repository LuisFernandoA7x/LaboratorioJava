/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.laboratoriodeelectronica;
import com.toedter.calendar.JDateChooser;
import java.sql.CallableStatement;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.concurrent.TimeUnit;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;


public class EmpleadoLab extends javax.swing.JInternalFrame {

    /**
     * Creates new form EmpleadoLab
     */
    private boolean indexChanged;
    String RPE_Antiguo;
    int oldIndex;
    public EmpleadoLab() {
        initComponents();
        MostrarVistaEmpleado();
        loadComponents();
    } 
    private void loadComponents(){
        quitarSelec.setVisible(false); 
        Becario.setVisible(false);
        Colaborador.setVisible(false);
        Responsable.setVisible(false);        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tablaEmpleado = new javax.swing.JTable();
        Colaborador = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        descActividad = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        Hrs_Semcolab = new javax.swing.JTextField();
        Responsable = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        Grado = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        f_inicio = new com.toedter.calendar.JDateChooser();
        f_fin = new com.toedter.calendar.JDateChooser();
        Becario = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        Hrs_Sem = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        Generacion = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        Fecha_nac = new com.toedter.calendar.JDateChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        nombreEmpleado = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        domicilioEMpleado = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        correoEmpleado = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tipoEmpleado = new javax.swing.JComboBox<>();
        celularEmpleado = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        rpeEmpleado = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        empleadoDesde = new com.toedter.calendar.JDateChooser();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        quitarSelec = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaResponsable = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablaColaborador = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        tablaBecario = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();

        setTitle("Empleado");

        tablaEmpleado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaEmpleado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaEmpleadoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaEmpleado);

        jLabel5.setText("Desc_Act");
        jLabel5.setToolTipText("");

        jLabel9.setText("Hrs_sem");
        jLabel9.setToolTipText("");

        javax.swing.GroupLayout ColaboradorLayout = new javax.swing.GroupLayout(Colaborador);
        Colaborador.setLayout(ColaboradorLayout);
        ColaboradorLayout.setHorizontalGroup(
            ColaboradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ColaboradorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ColaboradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ColaboradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(descActividad, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                    .addComponent(Hrs_Semcolab))
                .addContainerGap())
        );
        ColaboradorLayout.setVerticalGroup(
            ColaboradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ColaboradorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ColaboradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(descActividad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ColaboradorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(Hrs_Semcolab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel13.setText("Grado");
        jLabel13.setToolTipText("");

        jLabel16.setText("Fecha_Inicio");
        jLabel16.setToolTipText("");

        jLabel17.setText("Fecha_FIn");
        jLabel17.setToolTipText("");

        javax.swing.GroupLayout ResponsableLayout = new javax.swing.GroupLayout(Responsable);
        Responsable.setLayout(ResponsableLayout);
        ResponsableLayout.setHorizontalGroup(
            ResponsableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ResponsableLayout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(ResponsableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ResponsableLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Grado, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ResponsableLayout.createSequentialGroup()
                        .addGroup(ResponsableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ResponsableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(f_inicio, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f_fin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        ResponsableLayout.setVerticalGroup(
            ResponsableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ResponsableLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(ResponsableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(Grado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ResponsableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(f_inicio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ResponsableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(f_fin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(237, 237, 237))
        );

        jLabel10.setText("Hrs_Sem");
        jLabel10.setToolTipText("");

        jLabel11.setText("Generación");
        jLabel11.setToolTipText("");

        Generacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GeneracionActionPerformed(evt);
            }
        });

        jLabel12.setText("Fecha_nac");
        jLabel12.setToolTipText("");

        javax.swing.GroupLayout BecarioLayout = new javax.swing.GroupLayout(Becario);
        Becario.setLayout(BecarioLayout);
        BecarioLayout.setHorizontalGroup(
            BecarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BecarioLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Generacion))
            .addGroup(BecarioLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Fecha_nac, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))
            .addGroup(BecarioLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Hrs_Sem))
        );
        BecarioLayout.setVerticalGroup(
            BecarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BecarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BecarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(Fecha_nac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BecarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Hrs_Sem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BecarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(Generacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel7.setText("Empleado Desde");

        nombreEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreEmpleadoActionPerformed(evt);
            }
        });

        jLabel8.setText("TipoEmpleado");

        jLabel2.setText("Nombre");

        jLabel3.setText("Domicilio");

        jLabel4.setText("Correo");

        tipoEmpleado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Becario", "Colaborador", "Responsable" }));
        tipoEmpleado.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tipoEmpleadoItemStateChanged(evt);
            }
        });

        jLabel6.setText("Celular");

        jLabel1.setText("RPE_Empleado");
        jLabel1.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(110, Short.MAX_VALUE)
                .addComponent(empleadoDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel8)
                        .addComponent(jLabel7)
                        .addComponent(jLabel6)
                        .addComponent(jLabel4)
                        .addComponent(jLabel3)
                        .addComponent(jLabel2)
                        .addComponent(jLabel1))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(rpeEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(nombreEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(domicilioEMpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(correoEmpleado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tipoEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(celularEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(185, Short.MAX_VALUE)
                .addComponent(empleadoDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(rpeEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nombreEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(domicilioEMpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(correoEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(celularEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel8)
                        .addComponent(tipoEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(16, 16, 16)
                    .addComponent(jLabel7)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jButton3.setText("Eliminar");
        jButton3.setMaximumSize(new java.awt.Dimension(96, 25));
        jButton3.setMinimumSize(new java.awt.Dimension(96, 25));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setText("Modificar");
        jButton2.setMaximumSize(new java.awt.Dimension(96, 25));
        jButton2.setMinimumSize(new java.awt.Dimension(96, 25));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Agregar");
        jButton1.setMaximumSize(new java.awt.Dimension(96, 25));
        jButton1.setMinimumSize(new java.awt.Dimension(25, 25));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        quitarSelec.setText("Quitar Selec.");
        quitarSelec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitarSelecActionPerformed(evt);
            }
        });

        tablaResponsable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaResponsable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaResponsableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tablaResponsable);

        tablaColaborador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaColaborador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaColaboradorMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tablaColaborador);

        tablaBecario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaBecario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaBecarioMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tablaBecario);

        jLabel14.setText("Responsable");
        jLabel14.setToolTipText("");

        jLabel15.setText("Colaborador");
        jLabel15.setToolTipText("");

        jLabel18.setText("Becario");
        jLabel18.setToolTipText("");

        jLabel19.setText("Empleado");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(quitarSelec))
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Responsable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Becario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Colaborador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addGap(5, 5, 5)))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel14))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Responsable, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(20, 20, 20)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(12, 12, 12)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(quitarSelec)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(Colaborador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Becario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nombreEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreEmpleadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreEmpleadoActionPerformed

    private void tablaEmpleadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaEmpleadoMouseClicked
        cargarDatosEmpleado();
        indexChanged=false;
        oldIndex = tipoEmpleado.getSelectedIndex();
    }//GEN-LAST:event_tablaEmpleadoMouseClicked
    private void cargarDatosEmpleado(){
        int row = tablaEmpleado.getSelectedRow();
        String rpe = tablaEmpleado.getModel().getValueAt(row, 0).toString();
        String nombre = tablaEmpleado.getModel().getValueAt(row, 1).toString();
        String domicilio = tablaEmpleado.getModel().getValueAt(row, 2).toString();
        String email = tablaEmpleado.getModel().getValueAt(row, 3).toString();
        String telefono = tablaEmpleado.getModel().getValueAt(row, 4).toString();
        String fecha = tablaEmpleado.getModel().getValueAt(row, 5).toString();
        String antiguedad = tablaEmpleado.getModel().getValueAt(row, 6).toString();
        String tipo = tablaEmpleado.getModel().getValueAt(row, 7).toString();                
        rpeEmpleado.setText(rpe);
        nombreEmpleado.setText(nombre);
        domicilioEMpleado.setText(domicilio);
        correoEmpleado.setText(email);        
        celularEmpleado.setText(telefono); 
        tipoEmpleado.setSelectedItem(tipo);        
        setDateToControl(fecha,empleadoDesde);//cargar fecha al JDate
        quitarSelec.setVisible(true);
        Becario.setVisible(true);
        cargarDatosSecundarios(rpe,tipo);
        RPE_Antiguo = rpe;
    }
    private void setDateToControl(String date, JDateChooser jd){
        try{
            java.util.Date date1=new SimpleDateFormat("yyyy-MM-dd").parse(date);              
            jd.setDate(date1);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error: "+e.toString()); 
        }
    }
    public void fillBecarioPanel(String rpe){        				
        for(int i=0; i<tablaBecario.getRowCount();i++){
            String val = tablaBecario.getModel().getValueAt(i, 0).toString();            
            if(val.equals(rpe)){
                String f = (String)tablaBecario.getModel().getValueAt(i, 1);
                String hrs = (String)tablaBecario.getModel().getValueAt(i, 2);               
                String gen = (String)tablaBecario.getModel().getValueAt(i, 3);
                
                setDateToControl(f,Fecha_nac);  
                Hrs_Sem.setText(hrs);
                Generacion.setText(gen);
                break;
            }
        }        
    }
    private void fillColaboradorPanel(String rpe){
        for(int i=0; i<tablaColaborador.getRowCount();i++){
            String val = (String)tablaColaborador.getModel().getValueAt(i, 0);
            if(val.equals(rpe)){
                String desc = (String)tablaColaborador.getModel().getValueAt(i, 1);
                String hrs = (String)tablaColaborador.getModel().getValueAt(i, 2);                                               
                descActividad.setText(desc);
                Hrs_Semcolab.setText(hrs);
                break;
            }
        }
    }
    private void fillResponsablePanel(String rpe){
        for(int i=0; i<tablaResponsable.getRowCount();i++){
            String val = (String)tablaResponsable.getModel().getValueAt(i, 0);
            if(val.equals(rpe)){
                String grado = (String)tablaResponsable.getModel().getValueAt(i, 1);
                String ini = (String)tablaResponsable.getModel().getValueAt(i, 2);               
                String fin = (String)tablaResponsable.getModel().getValueAt(i, 3);
                
                setDateToControl(ini,f_inicio);  
                setDateToControl(fin,f_fin); 
                Grado.setText(grado);                
                break;
            }
        }
    }
    private void cargarDatosSecundarios(String rpe, String tipo){
        switch(tipo){
            case "Becario":                
                fillBecarioPanel(rpe);
                mostrarPanelBecario();
                break;
            case "Colaborador":                
                fillColaboradorPanel(rpe);
                mostrarPanelColab();
                break;
            case "Responsable":                
                fillResponsablePanel(rpe);
                mostrarPanelResp();
                break;
        }
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        EliminarEmpleado();
        clearFormEmpleado();
        MostrarVistaEmpleado();        
    }//GEN-LAST:event_jButton3ActionPerformed
    private void EliminarEmpleado(){
        Cconexion objetoConexion = new Cconexion();        
        String consulta ="DELETE FROM Persona.Empleado WHERE RPE_Empleado = ?;";        
        try
        {
            CallableStatement cs = objetoConexion.establecerConexion().prepareCall(consulta);
            cs.setInt(1,Integer.parseInt(rpeEmpleado.getText()));
            cs.execute();
        }catch (Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error" + e.toString());
        }
    }
    private void ModificarEmpleado(){
        
        Cconexion conexion = new Cconexion();       
        String consulta = "Update Persona.Empleado set RPE_Empleado=?,"
                + " Nombre=?,Domicilio=?, Correo=?, Celular=?, EmpleadoDesde=?,"
                + " Antiguedad=?, TipoEmpleado=?"
                + " where RPE_Empleado=?"; 
        String fecha = dateToString(empleadoDesde);
         
        java.util.Date dx = empleadoDesde.getDate();                                        
        int antiguedad = calculaAntiguedad(dx);
        try{
            CallableStatement cs = conexion.establecerConexion().prepareCall(consulta);
            cs.setInt(1,Integer.parseInt(rpeEmpleado.getText()));
            cs.setString(2,nombreEmpleado.getText());
            cs.setString(3,domicilioEMpleado.getText());
            cs.setString(4,correoEmpleado.getText());
            cs.setString(5,celularEmpleado.getText());
            cs.setDate(6, Date.valueOf(fecha));
            cs.setInt(7,antiguedad);
            cs.setString(8,tipoEmpleado.getSelectedItem().toString()); 
            cs.setInt(9,Integer.parseInt(RPE_Antiguo));
            cs.executeUpdate();
            
            if(indexChanged){
                switch(oldIndex){
                    case 1://RPE_Antiguo
                        consulta="DELETE FROM Persona.Becario WHERE RPE_Becario = ?";
                        cs = conexion.establecerConexion().prepareCall(consulta);
                        cs.setInt(1,Integer.parseInt(RPE_Antiguo));
                        cs.executeUpdate();
                        break;
                    case 2:
                        consulta="DELETE FROM Persona.Colaborador WHERE RPE_Colaborador = ?";
                        cs = conexion.establecerConexion().prepareCall(consulta);
                        cs.setInt(1,Integer.parseInt(RPE_Antiguo));
                        cs.executeUpdate();
                        break;
                    case 3:
                        consulta="DELETE FROM Persona.Responsable WHERE RPE_Responsable = ?";
                        cs = conexion.establecerConexion().prepareCall(consulta);
                        cs.setInt(1,Integer.parseInt(RPE_Antiguo));
                        cs.executeUpdate();
                        break;
                }
                switch(tipoEmpleado.getSelectedItem().toString()){
                case "Becario":
                    insertarRegistroBecario(conexion);
                    break;
                case "Colaborador":
                    insertarRegistroColaborador(conexion);
                    break;
                case "Responsable":
                    insertarRegistroResp(conexion);
                    break;
            }
                indexChanged=false;
            } else{
                switch(tipoEmpleado.getSelectedIndex()){
                                    case 1:
                    fecha = dateToString(Fecha_nac);                    
                    consulta = "UPDATE Persona.Becario SET Fecha_nac=?, Hrs_sem=?, Generacion=? WHERE RPE_Becario=?";
                    cs = conexion.establecerConexion().prepareCall(consulta);
                    //cs.setInt(1,Integer.parseInt(rpeEmpleado.getText()));                   
                    cs.setDate(1, Date.valueOf(fecha));
                    cs.setInt(2,Integer.parseInt(Hrs_Sem.getText())); 
                    cs.setString(3,Generacion.getText()); 
                    cs.setInt(4,Integer.parseInt(RPE_Antiguo));
                     
                    cs.executeUpdate();
                    break;
                case 2:
                    consulta = "UPDATE Persona.Colaborador SET Desc_act=? ,Hrs_sem=? WHERE RPE_Colaborador=?";
                    cs = conexion.establecerConexion().prepareCall(consulta);                    
                    //cs.setInt(1,Integer.parseInt(rpeEmpleado.getText()));
                    cs.setString(1,descActividad.getText());
                    cs.setInt(2,Integer.parseInt(Hrs_Semcolab.getText()));
                    cs.setInt(3,Integer.parseInt(RPE_Antiguo));
                    cs.executeUpdate();
                    break;
                case 3://responsable no lleva antiguedad  
                    fecha = dateToString(f_inicio);                    
                    consulta = "UPDATE Persona.Responsable SET Grado= ? ,Fecha_Inicio=?,Fecha_Fin=? WHERE RPE_Responsable=?";
                    cs = conexion.establecerConexion().prepareCall(consulta);
                    //cs.setInt(1,Integer.parseInt(rpeEmpleado.getText()));                    
                    cs.setString(1,Grado.getText());
                    cs.setDate(2, Date.valueOf(fecha));
                    fecha = dateToString(f_fin);
                    cs.setDate(3, Date.valueOf(fecha));
                    cs.setInt(4,Integer.parseInt(RPE_Antiguo));
                    cs.executeUpdate();
                    break;
                }
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error: "+e.toString());            
        }
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ModificarEmpleado();
        MostrarVistaEmpleado();
        clearFormEmpleado();
    }//GEN-LAST:event_jButton2ActionPerformed
    public static int calculaAntiguedad(java.util.Date d2) {
                Calendar cal = Calendar.getInstance();                
                java.util.Date dateAfter = cal.getTime();

                long dateBeforeInMs = d2.getTime(); 
                long dateAfterInMs = dateAfter.getTime();                 

                long timeDiff = Math.abs(dateAfterInMs - dateBeforeInMs);
                long daysDiff = TimeUnit.DAYS.convert(timeDiff, TimeUnit.MILLISECONDS);      
                int res = (int)(daysDiff/365.25);                
                return res;
    }
    private String dateToString(JDateChooser jd){
        int diaC = jd.getCalendar().get(java.util.Calendar.DATE);
        int mesC = jd.getCalendar().get(java.util.Calendar.MONTH)+1;
        int anioC = jd.getCalendar().get(java.util.Calendar.YEAR);
        String fecha = anioC+ "-" + mesC + "-" +diaC;
        return fecha;
    }
    private java.util.Date calendarToJavaDate(JDateChooser jd){
        int diaC = jd.getCalendar().get(java.util.Calendar.DATE);
        int mesC = jd.getCalendar().get(java.util.Calendar.MONTH)+1;
        int anioC = jd.getCalendar().get(java.util.Calendar.YEAR);        
        return new java.util.Date(anioC, mesC, diaC);
    }
    public void insertarEmpleado()
    {                
        Cconexion objetoConexion = new Cconexion();        
        String consulta = "Insert into Persona.Empleado(RPE_Empleado,Nombre,Domicilio,Correo,Celular,EmpleadoDesde, Antiguedad, TipoEmpleado) VALUES(?,?,?,?,?,?,?,?);";     
        String fecha = dateToString(empleadoDesde);  
        
        java.util.Date d2 = calendarToJavaDate(empleadoDesde);        
        int antiguedad = calculaAntiguedad(d2);        
        try
        {
            CallableStatement cs = objetoConexion.establecerConexion().prepareCall(consulta);
            cs.setInt(1,Integer.parseInt(rpeEmpleado.getText()));
            cs.setString(2,nombreEmpleado.getText());
            cs.setString(3,domicilioEMpleado.getText());
            cs.setString(4,correoEmpleado.getText());
            cs.setString(5,celularEmpleado.getText());
            cs.setDate(6, Date.valueOf(fecha));
            cs.setInt(7, antiguedad);
            cs.setString(8,tipoEmpleado.getSelectedItem().toString());
            cs.execute();  
            
            switch(tipoEmpleado.getSelectedItem().toString()){
                case "Becario":
                    insertarRegistroBecario(objetoConexion);
                    break;
                case "Colaborador":
                    insertarRegistroColaborador(objetoConexion);
                    break;
                case "Responsable":
                    insertarRegistroResp(objetoConexion);
                    break;
            }
        }catch (Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error" + e.toString());
        }
    }
    private void insertarRegistroBecario( Cconexion objetoConexion){
        String consulta = "Insert into Persona.Becario(RPE_Becario,Fecha_nac,Hrs_sem,Generacion) VALUES(?,?,?,?);";     
        String fNac = dateToString(Fecha_nac);        
        try
        {
            CallableStatement cs = objetoConexion.establecerConexion().prepareCall(consulta);
            cs.setInt(1,Integer.parseInt(rpeEmpleado.getText()));
            cs.setDate(2, Date.valueOf(fNac));
            cs.setInt(3, Integer.parseInt(Hrs_Sem.getText()));
            cs.setString(4,Generacion.getText());                                   ;
            cs.execute();                        
        }catch (Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error" + e.toString());
        }
    }
    private void insertarRegistroColaborador(Cconexion objetoConexion){
        String consulta = "Insert into Persona.Colaborador(RPE_Colaborador,Desc_act,Hrs_sem) VALUES(?,?,?);";                    
        try
        {
            CallableStatement cs = objetoConexion.establecerConexion().prepareCall(consulta);
            cs.setInt(1,Integer.parseInt(rpeEmpleado.getText()));            
            cs.setString(2, descActividad.getText());
            cs.setInt(3,Integer.parseInt(Hrs_Semcolab.getText()));                                               ;
            cs.execute();                        
        }catch (Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error: " + e.toString());
        }
    }
    private void insertarRegistroResp( Cconexion objetoConexion){
        String consulta = "Insert into Persona.Responsable(RPE_Responsable,Grado,Fecha_Inicio,Fecha_Fin) VALUES(?,?,?,?);";     
        String fIni = dateToString(f_inicio);        
        String fFin = dateToString(f_fin);
        try
        {
            CallableStatement cs = objetoConexion.establecerConexion().prepareCall(consulta);
            cs.setInt(1,Integer.parseInt(rpeEmpleado.getText()));            
            cs.setString(2,Grado.getText());
            cs.setDate(3, Date.valueOf(fIni));
            cs.setDate(4, Date.valueOf(fFin));                                              ;
            cs.execute();                        
        }catch (Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error" + e.toString());
        }
    }
    
    private void clearFormEmpleado(){
        rpeEmpleado.setText("");
        nombreEmpleado.setText("");
        domicilioEMpleado.setText("");
        correoEmpleado.setText("");
        celularEmpleado.setText("");
        tipoEmpleado.setSelectedIndex(0);        
        
        Grado.setText("");
        //f_inicio.setToolTipText("");
        //f_fin.setToolTipText("");
        
        descActividad.setText("");
        Hrs_Sem.setText("");        
        //Fecha_nac.setToolTipText("");
        Hrs_Semcolab.setText("");
        Generacion.setText("");
        
        Becario.setVisible(false);
        Colaborador.setVisible(false);
        Responsable.setVisible(false);
    }
    private void VistaColaborador(){
        Cconexion objetoConexion = new Cconexion();
                
        DefaultTableModel modelo = new DefaultTableModel();                
        modelo.addColumn("RPE_Colaborador");
        modelo.addColumn("Desc_act");
        modelo.addColumn("Hrs_sem");        

        String sql = "Select * from Persona.Colaborador;";
                
        String [] datos = new String[3];
        Statement st; 
        
        try
        {
            st = objetoConexion.establecerConexion().createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while (rs.next())
            {                
                datos[0]= rs.getString(1);
                datos[1]= rs.getString(2);
                datos[2]= rs.getString(3);                                          
                modelo.addRow(datos);
            }
            tablaColaborador.setModel(modelo);
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error:"+ e.toString());
        }
    }
    private void VistaResponsable(){
        Cconexion objetoConexion = new Cconexion();
                
        DefaultTableModel modelo = new DefaultTableModel();                
        modelo.addColumn("RPE_Responsable");
        modelo.addColumn("Grado");
        modelo.addColumn("Fecha_Inicio");
        modelo.addColumn("Fecha_Fin");

        String sql = "Select * from Persona.Responsable;";
                
        String [] datos = new String[4];
        Statement st; 
        
        try
        {
            st = objetoConexion.establecerConexion().createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while (rs.next())
            {                
                datos[0]= rs.getString(1);
                datos[1]= rs.getString(2);
                datos[2]= rs.getString(3);
                datos[3]= rs.getString(4);                           
                modelo.addRow(datos);
            }
            tablaResponsable.setModel(modelo);
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error:"+ e.toString());
        }
    }
    private void VistaBecario(){
        Cconexion objetoConexion = new Cconexion();
                
        DefaultTableModel modelo = new DefaultTableModel();                
        modelo.addColumn("RPE_Becario");
        modelo.addColumn("Fecha_nac");
        modelo.addColumn("Hrs_sem");
        modelo.addColumn("Generacion");

        String sql = "Select * from Persona.Becario";
                
        String [] datos = new String[4];
        Statement st; 
        
        try
        {
            st = objetoConexion.establecerConexion().createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while (rs.next())
            {                
                datos[0]= rs.getString(1);
                datos[1]= rs.getString(2);
                datos[2]= rs.getString(3);
                datos[3]= rs.getString(4);                           
                modelo.addRow(datos);
            }
            tablaBecario.setModel(modelo);
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error:"+ e.toString());
        }
    }
    public void MostrarVistaEmpleado()
    {
        Mostrar(tablaEmpleado);
        VistaBecario();
        VistaColaborador();
        VistaResponsable();        
    }
    public void Mostrar(JTable paramCliente)
    {
        Cconexion objetoConexion = new Cconexion();
                
        DefaultTableModel modelo = new DefaultTableModel();                
        modelo.addColumn("RPE_Empleado");
        modelo.addColumn("Nombre");
        modelo.addColumn("Domicilio");
        modelo.addColumn("Correo");
        modelo.addColumn("Celular");
        modelo.addColumn("EmpleadoDesde");
        modelo.addColumn("Antiguedad");
        modelo.addColumn("TipoEmpleado");
        String sql = "Select * from Persona.Empleado;";
                
        String [] datos = new String[8];
        Statement st; 
        
        try
        {
            st = objetoConexion.establecerConexion().createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while (rs.next())
            {                
                datos[0]= rs.getString(1);
                datos[1]= rs.getString(2);
                datos[2]= rs.getString(3);
                datos[3]= rs.getString(4);
                datos[4]= rs.getString(5);
                datos[5]= rs.getString(6);
                datos[6]= rs.getString(7);
                datos[7]= rs.getString(8);                             
                modelo.addRow(datos);
            }
            paramCliente.setModel(modelo);
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error:"+ e.toString());
        }        
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(tipoEmpleado.getSelectedIndex() != 0){
            insertarEmpleado();
            //Mostrar(tablaEmpleado);
            MostrarVistaEmpleado();
            clearFormEmpleado();
        }else{
            JOptionPane.showMessageDialog(null,"¡Seleccione un tipo de empleado!:");
        }        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void quitarSelecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitarSelecActionPerformed
        quitarSelec.setVisible(false);
        Becario.setVisible(false);
        clearFormEmpleado();
    }//GEN-LAST:event_quitarSelecActionPerformed

    private void GeneracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GeneracionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GeneracionActionPerformed

    private void tablaResponsableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaResponsableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaResponsableMouseClicked

    private void tablaColaboradorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaColaboradorMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaColaboradorMouseClicked

    private void tablaBecarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaBecarioMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaBecarioMouseClicked
    private void mostrarPanelBecario(){
        Becario.setVisible(true);
        Colaborador.setVisible(false);
        Responsable.setVisible(false);
    }
    private void mostrarPanelColab(){
        Becario.setVisible(false);
        Colaborador.setVisible(true);
        Responsable.setVisible(false);
    }
    private void mostrarPanelResp(){
        Becario.setVisible(false);
        Colaborador.setVisible(false);
        Responsable.setVisible(true);
    }
    private void tipoEmpleadoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tipoEmpleadoItemStateChanged
        if(oldIndex != tipoEmpleado.getSelectedIndex()){
            indexChanged=true;
        }
        switch(tipoEmpleado.getSelectedItem().toString()){
            case "Becario":
                mostrarPanelBecario();
                break;
            case "Colaborador":
                mostrarPanelColab();
                break;
            case "Responsable":
                mostrarPanelResp();
                break;
        }
    }//GEN-LAST:event_tipoEmpleadoItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Becario;
    private javax.swing.JPanel Colaborador;
    private com.toedter.calendar.JDateChooser Fecha_nac;
    private javax.swing.JTextField Generacion;
    private javax.swing.JTextField Grado;
    private javax.swing.JTextField Hrs_Sem;
    private javax.swing.JTextField Hrs_Semcolab;
    private javax.swing.JPanel Responsable;
    private javax.swing.JTextField celularEmpleado;
    private javax.swing.JTextField correoEmpleado;
    private javax.swing.JTextField descActividad;
    private javax.swing.JTextField domicilioEMpleado;
    private com.toedter.calendar.JDateChooser empleadoDesde;
    private com.toedter.calendar.JDateChooser f_fin;
    private com.toedter.calendar.JDateChooser f_inicio;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextField nombreEmpleado;
    private javax.swing.JButton quitarSelec;
    private javax.swing.JTextField rpeEmpleado;
    private javax.swing.JTable tablaBecario;
    private javax.swing.JTable tablaColaborador;
    private javax.swing.JTable tablaEmpleado;
    private javax.swing.JTable tablaResponsable;
    private javax.swing.JComboBox<String> tipoEmpleado;
    // End of variables declaration//GEN-END:variables
}
